{"ast":null,"code":"import { createStore } from \"vuex\";\nimport jwt_decode from 'jwt-decode';\nimport axios from \"axios\";\nimport router from \"@/router\";\nexport default createStore({\n  state: {\n    lstInfrastructure: [],\n    isAuthenticated: false,\n    jwt: localStorage.getItem('userToken'),\n    endpoints: {\n      obtainJWT: 'http://127.0.0.1:8000/api/token/',\n      refreshJWT: 'http://127.0.0.1:8000/api/token/refresh/'\n    }\n  },\n  mutations: {\n    //fun(state,data){state.data}\n    updateToken(state, newToken) {\n      localStorage.setItem('userToken', newToken);\n      state.jwt = newToken;\n      state.isAuthenticated = true;\n    },\n\n    removeToken(state) {\n      localStorage.removeItem('userToken');\n      state.jwt = null;\n      state.isAuthenticated = false;\n    }\n\n  },\n  actions: {\n    obtainToken({\n      commit\n    }, {\n      email,\n      password\n    }) {\n      const payload = {\n        username: email,\n        password: password\n      };\n      axios.post(this.state.endpoints.obtainJWT, payload).then(response => {\n        this.commit('updateToken', response.data.token);\n        this.state.isAuthenticated = true;\n        router.push('/Dashboard');\n      }).catch(error => {\n        this.state.isAuthenticated = false;\n        console.log(error);\n      });\n    },\n\n    refreshToken() {\n      const payload = {\n        token: this.state.jwt\n      };\n      axios.post(this.state.endpoints.refreshJWT, payload).then(response => {\n        this.commit('updateToken', response.data.token);\n        this.state.isAuthenticated = true;\n      }).catch(error => {\n        console.log(error);\n        this.state.isAuthenticated = false;\n      });\n    },\n\n    inspectToken() {\n      const token = this.state.jwt;\n\n      if (token) {\n        const decoded = jwt_decode(token);\n        const exp = decoded.exp;\n        const orig_iat = decoded.orig_iat;\n\n        if (exp - Date.now() / 1000 < 1800 && Date.now() / 1000 - orig_iat < 628200) {\n          this.dispatch('refreshToken');\n        } else if (exp - Date.now() / 1000 < 1800) {// DO NOTHING, DO NOT REFRESH          \n        } else {\n          this.state.isAuthenticated = false; // PROMPT USER TO RE-LOGIN, THIS ELSE CLAUSE COVERS THE CONDITION WHERE A TOKEN IS EXPIRED AS WELL\n        }\n      }\n    },\n\n    logOut() {\n      localStorage.removeItem('userToken');\n      state.jwt = null;\n      state.isAuthenticated = false;\n    }\n\n  }\n});","map":{"version":3,"names":["createStore","jwt_decode","axios","router","state","lstInfrastructure","isAuthenticated","jwt","localStorage","getItem","endpoints","obtainJWT","refreshJWT","mutations","updateToken","newToken","setItem","removeToken","removeItem","actions","obtainToken","commit","email","password","payload","username","post","then","response","data","token","push","catch","error","console","log","refreshToken","inspectToken","decoded","exp","orig_iat","Date","now","dispatch","logOut"],"sources":["/Users/jquadros@unomaha.edu/nia/home/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\nimport jwt_decode from 'jwt-decode';\nimport axios from \"axios\"\nimport router from \"@/router\";\n\nexport default createStore({\n    state:{\n        lstInfrastructure:[],\n        isAuthenticated : false,\n        jwt: localStorage.getItem('userToken'),\n        endpoints: {\n          obtainJWT: 'http://127.0.0.1:8000/api/token/',\n          refreshJWT: 'http://127.0.0.1:8000/api/token/refresh/'\n        },\n    },\n    mutations:\n    {\n        //fun(state,data){state.data}\n        updateToken(state, newToken){\n            localStorage.setItem('userToken', newToken);\n            state.jwt = newToken;\n            state.isAuthenticated= true;\n                \n          },\n          removeToken(state){\n            localStorage.removeItem('userToken');\n            state.jwt = null;\n            state.isAuthenticated= false;\n          },\n\n    },\n    actions:{\n        obtainToken({commit},{email,password}) {           \n            const payload = {\n                username: email,\n                password: password\n              }\n\n            axios.post(this.state.endpoints.obtainJWT, payload)\n              .then((response)=>{\n                  this.commit('updateToken', response.data.token);\n                  this.state.isAuthenticated= true;\n                  router.push('/Dashboard');\n                })\n              .catch((error)=>{\n                this.state.isAuthenticated= false;\n                  \n                  console.log(error);\n                })\n          },\n          refreshToken(){\n            const payload = {\n              token: this.state.jwt\n            }\n            axios.post(this.state.endpoints.refreshJWT, payload)\n              .then((response)=>{\n                  this.commit('updateToken', response.data.token);\n                  this.state.isAuthenticated= true;\n                \n                })\n              .catch((error)=>{\n                  console.log(error)\n                  this.state.isAuthenticated= false;\n                  \n                })\n          },\n          inspectToken(){\n            const token = this.state.jwt;\n            if(token){\n              const decoded = jwt_decode(token);\n              const exp = decoded.exp\n              const orig_iat = decoded.orig_iat\n              if(exp - (Date.now()/1000) < 1800 && (Date.now()/1000) - orig_iat < 628200){\n                this.dispatch('refreshToken')\n              } else if (exp -(Date.now()/1000) < 1800){\n                // DO NOTHING, DO NOT REFRESH          \n              } else {\n                this.state.isAuthenticated= false;\n                  \n                // PROMPT USER TO RE-LOGIN, THIS ELSE CLAUSE COVERS THE CONDITION WHERE A TOKEN IS EXPIRED AS WELL\n              }\n            }\n          },\n          logOut(){\n            localStorage.removeItem('userToken');\n            state.jwt = null;\n            state.isAuthenticated= false;\n          },\n\n    },\n\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}